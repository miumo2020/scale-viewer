{"version":3,"sources":["reportWebVitals.ts","components/Constants.ts","components/Utils.ts","components/FingerBoard.tsx","components/SettingsModal.tsx","components/ScaleViewer.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChordList","name","interval","ScaleList","NumberToNoteSharp","NumberToNoteFlat","convertNumberToNote","num","accidental","NoteToNumber","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","convertNoteToNumber","note","MARK_R","FONT_SIZE","FLET_START_WIDTH","FLET_WIDTH","BOARD_HEIGHT_PADDING","STRING_AREA_HEIGHT","FingerBoard","mode","settings","chordprops","scaleprops","FINGER_BOARD_WIDTH","fletnumber","STRING_LENGTH","FLET_LENGTH","tuning","length","FLET_NUM_TEXT_POS_Y","FINGER_BOARD_HEIGHT","FONT_SIZE_FLET_NUM","markPosition","createMarkPosition","root","scale","chord","getMarkColor","degree","style","FlexWrapper","t","push","x","y","fontSize","fill","textAnchor","dominantBaseline","width","height","viewBox","drawTuning","FingerBoardStyle","Array","map","_","i","flet","string","MARGIN_X","marks","undefined","cx","cy","r","toString","fontWeight","markNotes","fletcount","stringstate","note_num","note_degree","find","c","display","overflow","whiteSpace","WebkitOverflowScrolling","SettingsModal","show","setShow","setTuning","setAccidental","onChangeAccidental","e","currentTarget","value","Overlay","SettingsWindow","type","checked","onChange","result","onClick","tunignSetting","zIndex","position","top","left","backgroundColor","alignItems","justifyContent","padding","borderRadius","ScaleViewer","useState","setMode","setChord","setScale","settingsModal","setSettingsModal","setSettings","move","newNote","newTuning","SelectBoxStyle","handleChangeScaleRoot","selected","handleChangeScale","handleChangeChordRoot","handleChangeChord","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.286849b6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type Mode = \"Scale\" | \"Chord\";\r\n\r\nexport type Accidental = \"#\" | \"b\";\r\n\r\nexport type Chord = {\r\n  name: string;\r\n  interval: number[];\r\n};\r\n\r\nexport const ChordList: Chord[] = [\r\n  { name: \"maj\", interval: [0, 4, 7] },\r\n  { name: \"m\", interval: [0, 3, 7] },\r\n  { name: \"(b5)\", interval: [0, 4, 6] },\r\n  { name: \"dim\", interval: [0, 3, 6] },\r\n  { name: \"aug\", interval: [0, 4, 8] },\r\n  { name: \"sus4\", interval: [0, 5, 7] },\r\n  { name: \"sus2\", interval: [0, 2, 7] },\r\n  { name: \"6\", interval: [0, 4, 7, 9] },\r\n  { name: \"m6\", interval: [0, 3, 7, 9] },\r\n  { name: \"7\", interval: [0, 4, 7, 10] },\r\n  { name: \"m7\", interval: [0, 3, 7, 10] },\r\n  { name: \"M7\", interval: [0, 4, 7, 11] },\r\n  { name: \"mM7\", interval: [0, 3, 7, 11] },\r\n  { name: \"7(b5)\", interval: [0, 4, 6, 10] },\r\n  { name: \"m7(b5)\", interval: [0, 3, 6, 10] },\r\n  { name: \"M7(b5)\", interval: [0, 4, 6, 11] },\r\n  { name: \"mM7(b5)\", interval: [0, 3, 6, 11] },\r\n  { name: \"7sus4\", interval: [0, 5, 7, 10] },\r\n  { name: \"dim7\", interval: [0, 3, 6, 9] },\r\n  { name: \"add9\", interval: [0, 2, 4, 7] },\r\n  { name: \"m(add9)\", interval: [0, 2, 3, 7] },\r\n  { name: \"add4\", interval: [0, 4, 5, 7] },\r\n  { name: \"aug7\", interval: [0, 4, 8, 10] },\r\n];\r\n\r\nexport type Scale = {\r\n  name: string;\r\n  interval: number[];\r\n};\r\n\r\nexport const ScaleList: Scale[] = [\r\n  { name: \"Major\", interval: [0, 2, 4, 5, 7, 9, 11] },\r\n  { name: \"Natural Minor\", interval: [0, 2, 3, 5, 7, 8, 10] },\r\n  { name: \"Harmonic Minor\", interval: [0, 2, 3, 5, 7, 8, 11] },\r\n  { name: \"Melodic Minor\", interval: [0, 2, 3, 5, 7, 9, 11] },\r\n  { name: \"Ionian\", interval: [0, 2, 4, 5, 7, 9, 11] },\r\n  { name: \"Aeolian\", interval: [0, 2, 3, 5, 7, 8, 10] },\r\n  { name: \"Dorian\", interval: [0, 2, 3, 5, 7, 9, 10] },\r\n  { name: \"Phrygian\", interval: [0, 1, 3, 5, 7, 8, 10] },\r\n  { name: \"Lydian\", interval: [0, 2, 4, 6, 7, 9, 11] },\r\n  { name: \"Mixolydian\", interval: [0, 2, 4, 5, 7, 9, 10] },\r\n  { name: \"Locrian\", interval: [0, 1, 3, 5, 6, 8, 10] },\r\n  { name: \"Major Pentatonic\", interval: [0, 2, 4, 7, 9] },\r\n  { name: \"Minor Pentatonic\", interval: [0, 3, 5, 7, 10] },\r\n  { name: \"Diminished\", interval: [0, 2, 3, 5, 6, 8, 9, 11] },\r\n  // { name: \"Combination of Diminished\", interval: [0, 1, 3, 4, 6, 7, 9, 10] },\r\n  { name: \"Whole Tone\", interval: [0, 2, 4, 6, 8, 10] },\r\n];\r\n","import { Accidental } from \"./Constants\";\r\n\r\nconst NumberToNoteSharp: { [name: number]: string } = {\r\n  0: \"C\",\r\n  1: \"C#\",\r\n  2: \"D\",\r\n  3: \"D#\",\r\n  4: \"E\",\r\n  5: \"F\",\r\n  6: \"F#\",\r\n  7: \"G\",\r\n  8: \"G#\",\r\n  9: \"A\",\r\n  10: \"A#\",\r\n  11: \"B\",\r\n};\r\n\r\nconst NumberToNoteFlat: { [name: number]: string } = {\r\n  0: \"C\",\r\n  1: \"Db\",\r\n  2: \"D\",\r\n  3: \"Eb\",\r\n  4: \"E\",\r\n  5: \"F\",\r\n  6: \"Gb\",\r\n  7: \"G\",\r\n  8: \"Ab\",\r\n  9: \"A\",\r\n  10: \"Bb\",\r\n  11: \"B\",\r\n};\r\n\r\nexport const convertNumberToNote = (\r\n  num: number,\r\n  accidental: Accidental\r\n): string => {\r\n  if (num >= 12 || 0 > num) {\r\n    return \"\";\r\n  }\r\n  if (accidental === \"#\") {\r\n    return NumberToNoteSharp[num];\r\n  } else {\r\n    return NumberToNoteFlat[num];\r\n  }\r\n};\r\n\r\nconst NoteToNumber: { [name: string]: number } = {\r\n  C: 0,\r\n  \"C#\": 1,\r\n  Db: 1,\r\n  D: 2,\r\n  \"D#\": 3,\r\n  Eb: 3,\r\n  E: 4,\r\n  F: 5,\r\n  \"F#\": 6,\r\n  Gb: 6,\r\n  G: 7,\r\n  \"G#\": 8,\r\n  Ab: 8,\r\n  A: 9,\r\n  \"A#\": 10,\r\n  Bb: 10,\r\n  B: 11,\r\n};\r\n\r\nexport const convertNoteToNumber = (note: string): number => {\r\n  return NoteToNumber[note];\r\n};\r\n","import React from \"react\";\r\nimport { Mode, Accidental, Chord, Scale } from \"./Constants\";\r\nimport { convertNumberToNote } from \"./Utils\";\r\n\r\ntype ChordProps = {\r\n  root: number;\r\n  chord: Chord;\r\n};\r\n\r\ntype ScaleProps = {\r\n  root: number;\r\n  scale: Scale;\r\n};\r\n\r\ntype SettingsProps = {\r\n  tuning: number[];\r\n  fletnumber: number;\r\n  accidental: Accidental;\r\n};\r\n\r\ntype FingerBoardProps = {\r\n  mode: Mode;\r\n  settings: SettingsProps;\r\n  chordprops: ChordProps;\r\n  scaleprops: ScaleProps;\r\n};\r\n\r\ntype Note = {\r\n  num: number; //  0:C, 1:C#, ... , 11:B\r\n  degree: number; //  0:P1, 1:m2, ... , 11:M7\r\n};\r\n\r\nconst FONT_SIZE: number = 14;\r\nconst FONT_SIZE_TUNING: number = 20;\r\nconst FONT_SIZE_FLET_NUM: number = 20;\r\nconst MARGIN_X: number = 3;\r\nconst MARGIN_Y: number = 3;\r\nconst FLET_LINE_WIDTH: number = 2;\r\nconst STRING_LINE_WIDTH: number = 2;\r\nconst NAT_WIDTH: number = 10;\r\nconst MARK_R: number = FONT_SIZE - 2;\r\nconst FLET_START_WIDTH: number = MARK_R * 2 + MARGIN_X * 2 + NAT_WIDTH;\r\nconst FLET_WIDTH: number = MARK_R * 2 + MARGIN_X * 2 + FLET_LINE_WIDTH;\r\nconst BOARD_HEIGHT_PADDING: number = MARK_R + MARGIN_Y;\r\nconst STRING_AREA_HEIGHT: number = MARK_R * 2 + MARGIN_Y * 2;\r\n\r\nexport const FingerBoard: React.FC<FingerBoardProps> = ({\r\n  mode,\r\n  settings,\r\n  chordprops,\r\n  scaleprops,\r\n}) => {\r\n  const FINGER_BOARD_WIDTH: number =\r\n    FLET_START_WIDTH + FLET_WIDTH * (settings.fletnumber + 1);\r\n  const STRING_LENGTH: number =\r\n    FLET_LINE_WIDTH + FLET_WIDTH * settings.fletnumber;\r\n  const FLET_LENGTH: number =\r\n    STRING_AREA_HEIGHT * (settings.tuning.length - 1) + STRING_LINE_WIDTH;\r\n  const FLET_NUM_TEXT_POS_Y: number =\r\n    STRING_AREA_HEIGHT * (settings.tuning.length - 1) +\r\n    BOARD_HEIGHT_PADDING * 2 +\r\n    FONT_SIZE_FLET_NUM;\r\n  const FINGER_BOARD_HEIGHT: number =\r\n    FLET_NUM_TEXT_POS_Y + FONT_SIZE_FLET_NUM / 2;\r\n\r\n  let markPosition: Array<(Note | undefined)[]> = [];\r\n  if (mode === \"Scale\") {\r\n    markPosition = createMarkPosition(\r\n      settings.tuning,\r\n      settings.fletnumber,\r\n      scaleprops.root,\r\n      scaleprops.scale.interval\r\n    );\r\n  }\r\n  if (mode === \"Chord\") {\r\n    markPosition = createMarkPosition(\r\n      settings.tuning,\r\n      settings.fletnumber,\r\n      chordprops.root,\r\n      chordprops.chord.interval\r\n    );\r\n  }\r\n\r\n  const getMarkColor = (degree: number): string => {\r\n    if (mode === \"Scale\") {\r\n      if (degree === 0) {\r\n        return \"#e74c3c\";\r\n      } else {\r\n        return \"#e77b3c\";\r\n      }\r\n    } else {\r\n      if (degree === 0) {\r\n        return \"#e74c3c\";\r\n      } else if (degree === 2) {\r\n        return \"#a366cc\";\r\n      } else if (degree === 3) {\r\n        return \"#4f8be3\";\r\n      } else if (degree === 4) {\r\n        return \"#e6a23c\";\r\n      } else if (degree === 5) {\r\n        return \"#c47693\";\r\n      } else if (degree === 7) {\r\n        return \"#888\";\r\n      } else if (degree === 9) {\r\n        return \"#50875e\";\r\n      } else if (degree === 10) {\r\n        return \"#a5b32e\";\r\n      } else if (degree === 11) {\r\n        return \"#66cca7\";\r\n      } else {\r\n        return \"#888\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const markNotes = () => {\r\n    let marks = [];\r\n\r\n    // flet 0 mark\r\n    for (let string = 0; string < 6; string++) {\r\n      let note = markPosition[string][0];\r\n      if (note === undefined) continue;\r\n      marks.push(\r\n        <circle\r\n          key={\"mark-circle-string-\" + string.toString() + \"_flet-0\"}\r\n          cx={MARK_R + MARGIN_X}\r\n          cy={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * string}\r\n          r={MARK_R}\r\n          fill={getMarkColor(note.degree)}\r\n        ></circle>\r\n      );\r\n      marks.push(\r\n        <text\r\n          key={\"mark-text-string-\" + string.toString() + \"_flet-0\"}\r\n          x={MARK_R + MARGIN_X}\r\n          y={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * string}\r\n          fontSize={FONT_SIZE}\r\n          fontWeight=\"bold\"\r\n          fill=\"#FFF\"\r\n          textAnchor=\"middle\"\r\n          dominantBaseline=\"central\"\r\n        >\r\n          {convertNumberToNote(note.num, settings.accidental)}\r\n        </text>\r\n      );\r\n    }\r\n\r\n    // flet 1 ~ mark\r\n    for (let string = 0; string < 6; string++) {\r\n      for (let flet = 1; flet <= settings.fletnumber; flet++) {\r\n        let note = markPosition[string][flet];\r\n        if (note === undefined) continue;\r\n        marks.push(\r\n          <circle\r\n            key={\r\n              \"mark-circle-string-\" +\r\n              string.toString() +\r\n              \"_flet-\" +\r\n              flet.toString()\r\n            }\r\n            cx={\r\n              FLET_START_WIDTH +\r\n              FLET_WIDTH * (flet - 1) +\r\n              (FLET_LINE_WIDTH + MARGIN_X + MARK_R)\r\n            }\r\n            cy={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * string}\r\n            r={MARK_R}\r\n            fill={getMarkColor(note.degree)}\r\n          ></circle>\r\n        );\r\n        marks.push(\r\n          <text\r\n            key={\r\n              \"mark-text-string-\" +\r\n              string.toString() +\r\n              \"_flet-\" +\r\n              flet.toString()\r\n            }\r\n            x={\r\n              FLET_START_WIDTH +\r\n              FLET_WIDTH * (flet - 1) +\r\n              (FLET_LINE_WIDTH + MARGIN_X + MARK_R)\r\n            }\r\n            y={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * string}\r\n            fontSize={FONT_SIZE}\r\n            fontWeight=\"bold\"\r\n            fill=\"#FFF\"\r\n            textAnchor=\"middle\"\r\n            dominantBaseline=\"central\"\r\n          >\r\n            {convertNumberToNote(note.num, settings.accidental)}\r\n          </text>\r\n        );\r\n      }\r\n    }\r\n    return marks;\r\n  };\r\n\r\n  const drawTuning = () => {\r\n    let tuning = [];\r\n    for (let t = 0; t < settings.tuning.length; t++) {\r\n      tuning.push(\r\n        <text\r\n          key={\"tuning-string-\" + t}\r\n          x=\"10\"\r\n          y={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * t}\r\n          fontSize={FONT_SIZE_TUNING}\r\n          fill=\"#888\"\r\n          textAnchor=\"middle\"\r\n          dominantBaseline=\"central\"\r\n        >\r\n          {convertNumberToNote(settings.tuning[t], settings.accidental)}\r\n        </text>\r\n      );\r\n    }\r\n    return (\r\n      <svg\r\n        width=\"20\"\r\n        height={FINGER_BOARD_HEIGHT}\r\n        viewBox={\"0 0 20 \" + FINGER_BOARD_HEIGHT}\r\n      >\r\n        {tuning}\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={FlexWrapper}>\r\n      <div>{drawTuning()}</div>\r\n      <div style={FingerBoardStyle}>\r\n        <svg\r\n          width={FINGER_BOARD_WIDTH}\r\n          height={FINGER_BOARD_HEIGHT}\r\n          viewBox={\"0 0 \" + FINGER_BOARD_WIDTH + \" \" + FINGER_BOARD_HEIGHT}\r\n        >\r\n          <rect\r\n            x={MARK_R * 2 + MARGIN_X * 2}\r\n            y={BOARD_HEIGHT_PADDING}\r\n            width={NAT_WIDTH}\r\n            height={FLET_LENGTH}\r\n            fill=\"#888\"\r\n          />\r\n          {[...Array(settings.fletnumber + 1)]\r\n            .map((_, i) => i)\r\n            .map((flet) => (\r\n              <rect\r\n                key={\"line-flet-\" + flet}\r\n                x={FLET_WIDTH * flet + FLET_START_WIDTH}\r\n                y={BOARD_HEIGHT_PADDING}\r\n                width={FLET_LINE_WIDTH}\r\n                height={FLET_LENGTH}\r\n                fill=\"#888\"\r\n              />\r\n            ))}\r\n          {[...Array(settings.tuning.length)]\r\n            .map((_, i) => i)\r\n            .map((string) => (\r\n              <rect\r\n                key={\"line-string-\" + string}\r\n                x={FLET_START_WIDTH}\r\n                y={BOARD_HEIGHT_PADDING + STRING_AREA_HEIGHT * string}\r\n                width={STRING_LENGTH}\r\n                height={STRING_LINE_WIDTH}\r\n                fill=\"#888\"\r\n              />\r\n            ))}\r\n          <text\r\n            x={MARGIN_X + MARK_R}\r\n            y={FLET_NUM_TEXT_POS_Y}\r\n            fontSize={FONT_SIZE_FLET_NUM}\r\n            fill=\"#888\"\r\n            textAnchor=\"middle\"\r\n          >\r\n            0\r\n          </text>\r\n          {[...Array(settings.fletnumber)]\r\n            .map((_, i) => i + 1)\r\n            .map((flet) => (\r\n              <text\r\n                key={\"text-flet-\" + flet}\r\n                x={\r\n                  FLET_START_WIDTH +\r\n                  FLET_WIDTH * (flet - 1) +\r\n                  (FLET_LINE_WIDTH + MARGIN_X + MARK_R)\r\n                }\r\n                y={FLET_NUM_TEXT_POS_Y}\r\n                fontSize={FONT_SIZE_FLET_NUM}\r\n                fill=\"#888\"\r\n                textAnchor=\"middle\"\r\n              >\r\n                {flet}\r\n              </text>\r\n            ))}\r\n          {markNotes()}\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createMarkPosition = (\r\n  tuning: number[],\r\n  fletcount: number,\r\n  root: number,\r\n  interval: number[]\r\n): Array<(Note | undefined)[]> => {\r\n  let markPosition: Array<(Note | undefined)[]> = [];\r\n  for (let string = 0; string < 6; string++) {\r\n    let stringstate: (Note | undefined)[] = [];\r\n    for (let flet = 0; flet <= fletcount; flet++) {\r\n      let note_num = (tuning[string] + flet) % 12;\r\n      let note_degree = interval.find((c) => (c + root) % 12 === note_num);\r\n      if (note_degree !== undefined) {\r\n        let note: Note = { num: note_num, degree: note_degree };\r\n        stringstate.push(note);\r\n      } else {\r\n        stringstate.push(undefined);\r\n      }\r\n    }\r\n    markPosition.push(stringstate);\r\n  }\r\n  return markPosition;\r\n};\r\n\r\nconst FlexWrapper: React.CSSProperties = {\r\n  display: \"flex\",\r\n};\r\n\r\nconst FingerBoardStyle: React.CSSProperties = {\r\n  overflow: \"auto\",\r\n  whiteSpace: \"nowrap\",\r\n  WebkitOverflowScrolling: \"touch\",\r\n};\r\n","import React from \"react\";\r\nimport { Accidental } from \"./Constants\";\r\nimport { convertNumberToNote } from \"./Utils\";\r\n\r\ntype SettingsModalProps = {\r\n  show: boolean;\r\n  setShow: React.Dispatch<React.SetStateAction<boolean>>;\r\n  tuning: number[];\r\n  setTuning: (string: number, move: -1 | 1) => void;\r\n  accidental: Accidental;\r\n  setAccidental: (value: Accidental) => void;\r\n};\r\n\r\nexport const SettingsModal: React.FC<SettingsModalProps> = ({\r\n  show,\r\n  setShow,\r\n  tuning,\r\n  setTuning,\r\n  accidental,\r\n  setAccidental,\r\n}) => {\r\n  const tunignSetting = () => {\r\n    let result = [];\r\n    for (let string = 0; string < tuning.length; string++) {\r\n      result.push(\r\n        <div key={\"tuning-string-\" + string}>\r\n          <button onClick={() => setTuning(string, -1)}>{\"<\"}</button>{\" \"}\r\n          {convertNumberToNote(tuning[string], accidental)}{\" \"}\r\n          <button onClick={() => setTuning(string, 1)}>{\">\"}</button>\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onChangeAccidental = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setAccidental(e.currentTarget.value as Accidental);\r\n  };\r\n\r\n  const accidentalSetting = () => {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"accidental\"\r\n          value=\"#\"\r\n          checked={accidental === \"#\"}\r\n          onChange={onChangeAccidental}\r\n        />\r\n        #(Sharp)\r\n        <input\r\n          type=\"radio\"\r\n          name=\"accidental\"\r\n          value=\"b\"\r\n          checked={accidental === \"b\"}\r\n          onChange={onChangeAccidental}\r\n        />\r\n        b(Flat)\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {show === true && (\r\n        <div style={Overlay}>\r\n          <div style={SettingsWindow}>\r\n            <p>Settings</p>\r\n            <p>Accidental</p>\r\n            {accidentalSetting()}\r\n            <p>Tuning</p>\r\n            {tunignSetting()}\r\n            <p>\r\n              <button onClick={() => setShow(false)}>close</button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Overlay: React.CSSProperties = {\r\n  zIndex: 10,\r\n  position: \"fixed\",\r\n  top: 0,\r\n  left: 0,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nconst SettingsWindow: React.CSSProperties = {\r\n  zIndex: 20,\r\n  width: \"70%\",\r\n  padding: \"0.5em\",\r\n  borderRadius: \"5px\",\r\n  backgroundColor: \"#FFF\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Mode,\r\n  Accidental,\r\n  Chord,\r\n  ChordList,\r\n  Scale,\r\n  ScaleList,\r\n} from \"./Constants\";\r\nimport { convertNumberToNote, convertNoteToNumber } from \"./Utils\";\r\nimport { FingerBoard } from \"./FingerBoard\";\r\nimport { SettingsModal } from \"./SettingsModal\";\r\n\r\ntype SettingsState = {\r\n  tuning: number[];\r\n  fletnumber: number;\r\n  accidental: Accidental;\r\n};\r\n\r\ntype ChordState = {\r\n  root: number;\r\n  chord: Chord;\r\n};\r\n\r\ntype ScaleState = {\r\n  root: number;\r\n  scale: Scale;\r\n};\r\n\r\nexport const ScaleViewer = () => {\r\n  const [mode, setMode] = useState<Mode>(\"Scale\");\r\n\r\n  const [chord, setChord] = useState<ChordState>({\r\n    root: 0,\r\n    chord: ChordList[0],\r\n  });\r\n  const handleChangeChordRoot = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setChord({\r\n      root: convertNoteToNumber(e.currentTarget.value),\r\n      chord: chord.chord,\r\n    });\r\n  };\r\n  const handleChangeChord = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    let selected = ChordList.find(\r\n      (chord) => e.currentTarget.value === chord.name\r\n    );\r\n    if (selected !== undefined)\r\n      setChord({\r\n        root: chord.root,\r\n        chord: selected,\r\n      });\r\n  };\r\n\r\n  const [scale, setScale] = useState<ScaleState>({\r\n    root: 0,\r\n    scale: ScaleList[0],\r\n  });\r\n  const handleChangeScaleRoot = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    setScale({\r\n      root: convertNoteToNumber(e.currentTarget.value),\r\n      scale: scale.scale,\r\n    });\r\n  };\r\n  const handleChangeScale = (e: React.FormEvent<HTMLSelectElement>) => {\r\n    let selected = ScaleList.find(\r\n      (scale) => e.currentTarget.value === scale.name\r\n    );\r\n    if (selected !== undefined)\r\n      setScale({\r\n        root: scale.root,\r\n        scale: selected,\r\n      });\r\n  };\r\n\r\n  const [settingsModal, setSettingsModal] = useState(false);\r\n  const [settings, setSettings] = useState<SettingsState>({\r\n    tuning: [4, 11, 7, 2, 9, 4],\r\n    fletnumber: 21,\r\n    accidental: \"#\",\r\n  });\r\n\r\n  const setTuning = (string: number, move: -1 | 1): void => {\r\n    let newNote: number = (settings.tuning[string] + move + 12) % 12;\r\n    let newTuning: number[] = [...settings.tuning];\r\n    newTuning[string] = newNote;\r\n    setSettings({\r\n      tuning: newTuning,\r\n      fletnumber: settings.fletnumber,\r\n      accidental: settings.accidental,\r\n    });\r\n  };\r\n\r\n  const setAccidental = (value: Accidental): void => {\r\n    setSettings({\r\n      tuning: settings.tuning,\r\n      fletnumber: settings.fletnumber,\r\n      accidental: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>Scale Viewer</div>\r\n      <button onClick={() => setMode(\"Scale\")}>ScaleMode</button>\r\n      <button onClick={() => setMode(\"Chord\")}>ChordMode</button>\r\n\r\n      <button onClick={() => setSettingsModal(true)}>settings</button>\r\n      <SettingsModal\r\n        show={settingsModal}\r\n        setShow={setSettingsModal}\r\n        tuning={settings.tuning}\r\n        setTuning={setTuning}\r\n        accidental={settings.accidental}\r\n        setAccidental={setAccidental}\r\n      />\r\n\r\n      {mode === \"Scale\" && (\r\n        <div>\r\n          <select\r\n            style={SelectBoxStyle}\r\n            onChange={(e) => handleChangeScaleRoot(e)}\r\n            value={convertNumberToNote(scale.root, settings.accidental)}\r\n          >\r\n            {[...Array(12)]\r\n              .map((_, i) => convertNumberToNote(i, settings.accidental))\r\n              .map((note) => (\r\n                <option value={note} key={note}>\r\n                  {note}\r\n                </option>\r\n              ))}\r\n          </select>\r\n          <select\r\n            style={SelectBoxStyle}\r\n            onChange={(e) => handleChangeScale(e)}\r\n            value={scale.scale.name}\r\n          >\r\n            {ScaleList.map((scale) => (\r\n              <option value={scale.name} key={scale.name}>\r\n                {scale.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {mode === \"Chord\" && (\r\n        <div>\r\n          <select\r\n            style={SelectBoxStyle}\r\n            onChange={(e) => handleChangeChordRoot(e)}\r\n            value={convertNumberToNote(chord.root, settings.accidental)}\r\n          >\r\n            {[...Array(12)]\r\n              .map((_, i) => convertNumberToNote(i, settings.accidental))\r\n              .map((note) => (\r\n                <option value={note} key={note}>\r\n                  {note}\r\n                </option>\r\n              ))}\r\n          </select>\r\n          <select\r\n            style={SelectBoxStyle}\r\n            onChange={(e) => handleChangeChord(e)}\r\n            value={chord.chord.name}\r\n          >\r\n            {ChordList.map((chord) => (\r\n              <option value={chord.name} key={chord.name}>\r\n                {chord.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      <FingerBoard\r\n        mode={mode}\r\n        settings={settings}\r\n        chordprops={chord}\r\n        scaleprops={scale}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst SelectBoxStyle: React.CSSProperties = {\r\n  fontSize: \"24px\",\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ScaleViewer } from \"./components/ScaleViewer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ScaleViewer />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}